@page "/map"

    <div class="row">
        <div class="col-md-2">
            <div class="form-group">
                <button class="btn btn-block btn-outline-info" @onclick="StartDrawing">Start Drawing</button>
            </div>
        </div>
        <div class="col-md-10">
            <div class="pb-4" style="height: calc(100vh - 3.5rem);">
                <Map @ref="MapItem"
                     Map_Click="(e) => MapClicked((MapLatLng)e)"
                     Map_DoubleClick="(e) => MapDoubleClicked((MapLatLng)e)"
                     Map_RightClick="(e) => MapRightClicked((MapLatLng)e)"
                     Marker_Click="(e) => MarkerClicked((MapElementMouseEvent)e)"
                     MapId="MapElement"></Map>
            </div>
        </div>
    </div>
    @code {
        private Map MapItem { get; set; }
        private void MapClicked(MapLatLng point)
        {
            MapItem.AddMarker(new MapMarker()
            {
                Id = Guid.NewGuid(),
                Options = new MapMarkerOptions
                {
                    clickable = true,
                    position = point,
                    opacity = 1,
                    visible = true,
                    
                }
            });
        }

        private void StartDrawing()
        {
            MapItem.StartDrawing();
        }

        private void MarkerClicked(MapElementMouseEvent e)
        {
            Console.Out.WriteLine($"Marker:{e.ElementId}, Clicked at coordinates Lat:{e.Coords.lat}, Lon:{e.Coords.lng}");
        }

        private void MapDoubleClicked(MapLatLng point)
        {
            Console.Out.WriteLine($"From Blazor Mouse Double Clicked - lat:{point.lat} | lng:{point.lng}");
        }

        private void MapRightClicked(MapLatLng point)
        {
            Console.Out.WriteLine($"From Blazor Mouse Right Clicked - lat:{point.lat} | lng:{point.lng}");
        }


    }
